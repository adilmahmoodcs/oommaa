# flow code to be used on https://code2flow.com/app

User sign in;

switch(Action) {
  case Add
  keyword:
  case Add
  Licensor:
    End;
    break;

  case Add
  Brand:
    [recurring]
    Import
    matching pages;
    if (Is Page
    shut down?) {
      Mark page
      and posts as
      shut down;
    } else {
      import_page_posts:
      [recurring]
      Import all recent
      posts of page;
      check_post_status:
      switch(Check post
      status) {
        case Status is
        already "final":
          Do not
          change status;
          break;
        case Any domain is
        Blacklisted:
          Move on
          Blacklist;
          break;
        case All domains are
        whitelisted:
          Move on
          Whitelist;
          break;
        case Any keyword
        matches:
          Move to
          Suspects;
          break;
        case else:
          Remain
          "Not suspect";
          break;
      }
    }
    break;

  case Add
  Domain:
  case Change
  Domain status:
    domain_status_change:
    switch Which
    Status? {
      case Whitelisted:
        Re-check
        domains's
        blacklisted
        posts;
        goto check_post_status;
      case Blacklisted:
        Re-check
        domains's
        whitelisted
        posts;
        goto check_post_status;
        break
    }
    break;

  case Insert URL:
    (try to) find
    FB object
    from url;
    if (Found?) {
      Import Page
      and Post [Post];

      branch(cross_b) [Page] {
        if (Page
        exists?) {
          End;
        } else {
          Create
          the Page;
          goto import_page_posts;
        }
      }
      Import that
      post /
      image /
      video
      as blacklisted;
      branch(domain_blacklist) [1] {
        blacklist_domains:
        Mark its new
        domains as
        blacklisted;
      }

      branch(recheck_status) [2] {
        Recheck ad
        status;
      }

      branch(recheck_status) [3] {
        save_screenshots:
        Save
        screenshots;
      }
    } else {
      End;
    }

    break;

  case Change Post
  Status:
    switch(Which
    Status?) {
      case Not suspect:
        Mark as
        not suspect;
        break;
      case Suspect:
        Mark as
        suspect;
        break;
      case Whitelist:
        Mark as
        whitelisted;
        break;
      case Blacklisted:
        Mark as
        blacklisted;
        branch(goto_blacklist_domains) [1] {
          goto blacklist_domains;
        }
        branch(goto_save_screenshots) [2] {
          goto save_screenshots;
        }
        break;
      case Report to
      Facebook:
        Mark as
        reported to FB;
        check_shut_down:
        if ([recurring]
        is shut down?) {
          Mark as
          shut down;
        } else {
          loop check_shut_down;
        }
      break;
    }
    break;
}
